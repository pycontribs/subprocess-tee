[tox]
requires =
    setuptools>=65.3
    tox>=4.6.3
    tox-extra
    tox-uv>=1.16
env_list =
    py
    lint
    pkg
    docs
    deps
    alpine

[testenv]
description =
    Run the tests under {base_python}
package = editable
extras =
    test
pass_env =
    CI
    CURL_CA_BUNDLE
    FORCE_COLOR
    GITHUB_*
    HOME
    LANG
    LC_*
    NO_COLOR
    PIP_*
    PUBLISH
    PYTEST_*
    PYTHON*
    PYTHONBREAKPOINT
    PYTHONIOENCODING
    PYTHONPYCACHEPREFIX
    PY_COLORS
    REQUESTS_CA_BUNDLE
    RTD_TOKEN
    SETUPTOOLS_SCM_DEBUG
    SSH_AUTH_SOCK
    SSL_CERT_FILE
    TERM
    UV_*
set_env =
    PIP_CONSTRAINT = {tox_root}/.config/constraints.txt
    PIP_DISABLE_VERSION_CHECK = 1
    PYTEST_REQPASS = 18
    PYTHONDONTWRITEBYTECODE = 1
    PYTHONUNBUFFERED = 1
    devel, pkg, pre: PIP_CONSTRAINT = /dev/null
change_dir = {tox_root}
commands =
    python -m pytest
allowlist_externals =
    find
    rm
    sh

[testenv:lint]
description = Run all linters
skip_install = true
deps =
    pre-commit>=4.0.1
    pre-commit-uv>=4.1.4
    setuptools>=51.1.1
pass_env =
    {[testenv]pass_env}
    PRE_COMMIT_HOME
set_env =
    {[testenv]set_env}
    PIP_CONSTRAINT =
commands_pre =
commands =
    {env_python} -m pre_commit run --all-files --show-diff-on-failure {posargs:}

[testenv:pkg]
description =
    Do packaging and distribution tests, PEP-440,PEP-517,PEP-621
skip_install = true
deps =
    build>=0.9
    twine>=4.0.1
set_env =
commands =
    rm -rfv {tox_root}/dist/
    python -m build \
      --outdir {tox_root}/dist/ \
      {tox_root}
    python -m twine check --strict {tox_root}/dist/*
used_develop = false

[testenv:docs]
description = Builds docs
package = editable
skip_install = false
extras =
    docs
set_env =
    DYLD_FALLBACK_LIBRARY_PATH = /opt/homebrew/lib:{env:LD_LIBRARY_PATH}
    NO_COLOR = 1
    TERM = dump
commands =
    mkdocs {posargs:build --strict --site-dir=_readthedocs/html/}

[testenv:deps]
description = Bump all test dependencies
skip_install = true
deps =
    {[testenv:lint]deps}
extras =
set_env =
    PIP_CONSTRAINT = /dev/null
commands_pre =
commands =
    -pre-commit run --all-files --show-diff-on-failure --hook-stage manual lock
    -pre-commit run --all-files --show-diff-on-failure --hook-stage manual deps
    -pre-commit autoupdate
env_dir = {work_dir}/lint

[testenv:alpine]
description = Tests installation on Alpine linux
skip_install = true
commands =
    docker build .
allowlist_externals =
    docker

[testenv:rpm]
description = Use packit to build RPM (requires RPM based Linux distro)
deps =
    build
    packitos
    setuptools-scm
commands =
    sh -c "packit build in-mock --root=fedora-40-$(arch)"
