[tox]
minversion = 3.9.0
envlist =
    lint
    packaging
    py{36,37,38,39}

isolated_build = True

requires =
    setuptools >= 41.4.0
    # 2020-resolver
    pip >= 2.20.3

[testenv]
usedevelop = True
# do not put * in passenv as it may break builds do to reduced isolation
passenv =
    CI
    GITHUB_*
    HOME
    PIP_*
    PUBLISH
    PYTEST_*
    SSH_AUTH_SOCK
    TERM
setenv =
    PIP_DISABLE_VERSION_CHECK=1
    PYTEST_REQPASS=14
    PYTHONDONTWRITEBYTECODE=1
    PYTHONUNBUFFERED=1
commands =
    python -m pytest
deps =
    -r test-requirements.txt
whitelist_externals =
    find
    rm
    sh

[testenv:deps]
description = Update dependency lock files used for testing
deps =
    # replace with version once a new release is made
    # https://github.com/jazzband/pip-tools/issues/1047
    pip-tools @ git+https://github.com/jazzband/pip-tools
commands =
    pip-compile -o test-requirements.txt setup.cfg test-requirements.in

[testenv:lint]
description = Runs all linting tasks
# temporary due to https://github.com/PyCQA/pylint/issues/3876
basepython = python3.8
commands =
    # to run a single linter you can do "pre-commit run flake8"
    python -m pre_commit run {posargs:--all}
deps = pre-commit>=1.18.1
extras =
skip_install = true
usedevelop = false

[testenv:packaging]
description =
    Do packaging/distribution. If tag is not present or PEP440 compliant upload to
    PYPI could fail
# `usedevelop = true` overrides `skip_install` instruction, it's unwanted
usedevelop = false
# don't install package in this env
skip_install = true
deps =
    collective.checkdocs >= 0.2
    build >= 0.3.1.post1
    twine >= 1.14.0
setenv =
commands =
    rm -rfv {toxinidir}/dist/
    python -m build \
      --sdist \
      --wheel \
      --outdir {toxinidir}/dist/ \
      {toxinidir}
    # metadata validation
    python -m twine check {toxinidir}/dist/*
