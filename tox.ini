# cspell: ignore REQPASS posargs packit packitos devel
[tox]
min_version = 4.6.3
env_list =
    lint
    pkg
    deps
    py
    alpine

isolated_build = true

requires =
  tox >= 4.6.3
  tox-uv >= 1.16.0
  tox-extra
  setuptools >= 65.3.0 # editable installs

[testenv]
description =
  Run the tests under {base_python}
use_develop = True
# do not put * in pass_env as it may break builds do to reduced isolation
pass_env =
  CI
  CURL_CA_BUNDLE  # https proxies, https://github.com/tox-dev/tox/issues/1437
  FORCE_COLOR
  GITHUB_*
  HOME
  LANG
  LC_*
  NO_COLOR
  PIP_*
  PUBLISH
  PYTEST_*
  PYTEST_*  # allows developer to define their own preferences
  PYTHON*  # PYTHONPYCACHEPREFIX, PYTHONIOENCODING, PYTHONBREAKPOINT,...
  PY_COLORS
  REQUESTS_CA_BUNDLE  # https proxies
  RTD_TOKEN
  SETUPTOOLS_SCM_DEBUG
  SSH_AUTH_SOCK # may be needed by git
  SSL_CERT_FILE  # https proxies
  TERM
  UV_*
setenv =
    PIP_CONSTRAINT = {tox_root}/.config/constraints.txt
    devel,pkg,pre: PIP_CONSTRAINT = /dev/null
    PIP_DISABLE_VERSION_CHECK=1
    PYTEST_REQPASS=16
    py38: PYTEST_REQPASS=15
    PYTHONDONTWRITEBYTECODE=1
    PYTHONUNBUFFERED=1
commands =
    python -m pytest
extras =
    test
allowlist_externals =
    find
    rm
    sh
changedir = {tox_root}

[testenv:alpine]
description = Tests installation on Alpine linux
skip_install = true
commands =
    docker build .
allowlist_externals =
    docker

[testenv:docs]
description = Build docs
extras =
    docs
commands =
    mkdocs build --strict

[testenv:lint]
description = Run all linters
deps =
  pre-commit>=4.0.1
  pre-commit-uv>=4.1.4
  setuptools>=51.1.1
skip_install = true
commands_pre =
commands =
  {env_python} -m pre_commit run --all-files --show-diff-on-failure {posargs:}
pass_env =
  {[testenv]pass_env}
  PRE_COMMIT_HOME
setenv =
  {[testenv]setenv}
  # avoid messing pre-commit with out own constraints
  PIP_CONSTRAINT=

[testenv:deps]
description = Bump all test dependencies
# we reuse the lint environment
env_dir = {work_dir}/lint
skip_install = true
deps =
  {[testenv:lint]deps}
setenv =
  # without his upgrade would likely not do anything
  PIP_CONSTRAINT = /dev/null
commands_pre =
commands =
  -pre-commit run --all-files --show-diff-on-failure --hook-stage manual lock
  -pre-commit run --all-files --show-diff-on-failure --hook-stage manual deps
  # Update pre-commit hooks
  -pre-commit autoupdate
extras =
use_develop = false

[testenv:pkg]
description =
    Do packaging and distribution tests, PEP-440,PEP-517,PEP-621
# `use_develop = true` overrides `skip_install` instruction, it's unwanted
used_develop = false
# don't install package in this env
skip_install = true
deps =
    build >= 0.9.0
    twine >= 4.0.1
setenv =
commands =
    rm -rfv {tox_root}/dist/
    python -m build \
      --outdir {tox_root}/dist/ \
      {tox_root}
    # metadata validation
    python -m twine check --strict {tox_root}/dist/*

[testenv:rpm]
description = Use packit to build RPM (requires RPM based Linux distro)
deps =
  build
  packitos
  setuptools-scm
commands =
  sh -c "packit build in-mock --root=fedora-40-$(arch)"
