[tox]
minversion = 4.6.3
envlist =
    lint
    pkg
    deps
    py
    alpine

isolated_build = true

requires =
  tox >= 4.6.3
  tox-uv >= 1.16.0
  setuptools >= 65.3.0 # editable installs

[testenv]
usedevelop = True
# do not put * in passenv as it may break builds do to reduced isolation
passenv =
    CI
    GITHUB_*
    HOME
    PIP_*
    PUBLISH
    PYTEST_*
    SSH_AUTH_SOCK
    TERM
setenv =
    PIP_DISABLE_VERSION_CHECK=1
    PYTEST_REQPASS=16
    py38: PYTEST_REQPASS=15
    PYTHONDONTWRITEBYTECODE=1
    PYTHONUNBUFFERED=1
commands =
    python -m pytest
deps =
    ansible-core
extras =
    test
allowlist_externals =
    find
    rm
    sh
changedir = {toxinidir}

[testenv:alpine]
description = Tests installation on Alpine linux
skip_install = true
commands =
    docker build .
allowlist_externals =
    docker

[testenv:docs]
description = Build docs
extras =
    docs
commands =
    mkdocs build --strict

[testenv:lint]
description = Runs all linting tasks
commands =
    # to run a single linter you can do "pre-commit run flake8"
    python -m pre_commit run {posargs:--all}
deps =
    pre-commit>=1.18.1
    pre-commit-uv>=0.5.0
extras =
skip_install = true
usedevelop = false

[testenv:pkg]
description =
    Do packaging and distribution tests, PEP-440,PEP-517,PEP-621
# `usedevelop = true` overrides `skip_install` instruction, it's unwanted
usedevelop = false
# don't install package in this env
skip_install = true
deps =
    build >= 0.9.0
    twine >= 4.0.1
setenv =
commands =
    rm -rfv {toxinidir}/dist/
    python -m build \
      --outdir {toxinidir}/dist/ \
      {toxinidir}
    # metadata validation
    python -m twine check --strict {toxinidir}/dist/*
